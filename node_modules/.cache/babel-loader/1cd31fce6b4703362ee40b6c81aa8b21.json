{"ast":null,"code":"var _jsxFileName = \"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js\";\nimport React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n\n    this.heandleChangeQuery = query => {\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${query}`\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      query: prevQuery\n    } = parsedQuery(prevProps.location.search);\n    const {\n      query: nextQuery\n    } = parsedQuery(this.props.location.search);\n\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi.fetchSearchMovies(nextQuery).then(movies => this.setState({\n        movies\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchForm, {\n      onSubmit: this.heandleChangeQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), movies.length > 0 && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 31\n      }\n    }, \"Go back\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.posterList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, movies.length > 0 && movies.map(movie => /*#__PURE__*/React.createElement(\"li\", {\n      key: movie.id,\n      className: styles.posterItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${this.props.match.url}/${movie.id}`,\n      className: styles.itemLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, movie.original_title), /*#__PURE__*/React.createElement(NavLink, {\n      to: `${this.props.match.url}/${movie.id}`,\n      className: styles.imageLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${movie.poster_path}`,\n      className: styles.poster,\n      alt: movie.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js"],"names":["React","Component","SearchForm","parsedQuery","fetchMoviesApi","NavLink","styles","photo","MoviesPage","state","movies","heandleChangeQuery","query","props","history","push","pathname","location","search","componentDidUpdate","prevProps","prevState","prevQuery","nextQuery","fetchSearchMovies","then","setState","render","length","posterList","map","movie","id","posterItem","match","url","itemLink","original_title","imageLink","poster_path","poster","title"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class MoviesPage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = parsedQuery(prevProps.location.search);\n    const { query: nextQuery } = parsedQuery(this.props.location.search);\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi\n        .fetchSearchMovies(nextQuery)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  heandleChangeQuery = (query) => {\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: `query=${query}`,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <>\n        <SearchForm onSubmit={this.heandleChangeQuery} />\n        {movies.length > 0 && <NavLink to=\"/\">Go back</NavLink>}\n        <ul className={styles.posterList}>\n          {movies.length > 0 &&\n            movies.map((movie) => (\n              <li key={movie.id} className={styles.posterItem}>\n                <NavLink\n                  to={`${this.props.match.url}/${movie.id}`}\n                  className={styles.itemLink}\n                >\n                  {movie.original_title}\n                </NavLink>\n                <NavLink\n                  to={`${this.props.match.url}/${movie.id}`}\n                  className={styles.imageLink}\n                >\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                    className={styles.poster}\n                    alt={movie.title}\n                  />\n                </NavLink>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}