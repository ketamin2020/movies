{"ast":null,"code":"import _classCallCheck from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import fetchMoviesApi from\"../../services/fetchMoviesApi\";import styles from\"../cast/Cast.module.css\";import photo from\"../not-found.png\";var Cast=/*#__PURE__*/function(_Component){_inherits(Cast,_Component);var _super=_createSuper(Cast);function Cast(){var _this;_classCallCheck(this,Cast);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={actors:\"\"};return _this;}_createClass(Cast,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetchMoviesApi.fetchMovieCredits(this.props.match.params.movieId).then(function(actors){return _this2.setState({actors:actors});});}},{key:\"render\",value:function render(){var actors=this.state.actors;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"ul\",{className:styles.list},actors&&actors.map(function(_ref){var id=_ref.id,profile_path=_ref.profile_path,name=_ref.name,character=_ref.character;return/*#__PURE__*/React.createElement(\"li\",{key:id},/*#__PURE__*/React.createElement(\"img\",{src:profile_path?\"https://image.tmdb.org/t/p/w500\".concat(profile_path):photo,className:styles.poster,alt:name}),/*#__PURE__*/React.createElement(\"p\",{className:styles.title},\"Name: \",name),/*#__PURE__*/React.createElement(\"p\",{className:styles.title},\"Character: \",character));})));}}]);return Cast;}(Component);export{Cast as default};","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/cast/Cast.js"],"names":["React","Component","fetchMoviesApi","styles","photo","Cast","state","actors","fetchMovieCredits","props","match","params","movieId","then","setState","list","map","id","profile_path","name","character","poster","title"],"mappings":"4qBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CAEA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,kBAAlB,C,GAEqBC,CAAAA,I,mTACnBC,K,CAAQ,CACNC,MAAM,CAAE,EADF,C,6FAIY,iBAClBL,cAAc,CACXM,iBADH,CACqB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAD7C,EAEGC,IAFH,CAEQ,SAACN,MAAD,QAAY,CAAA,MAAI,CAACO,QAAL,CAAc,CAAEP,MAAM,CAANA,MAAF,CAAd,CAAZ,EAFR,EAGD,C,uCAEQ,IACCA,CAAAA,MADD,CACY,KAAKD,KADjB,CACCC,MADD,CAEP,mBACE,qDACE,0BAAI,SAAS,CAAEJ,MAAM,CAACY,IAAtB,EACGR,MAAM,EACLA,MAAM,CAACS,GAAP,CAAW,kBAAGC,CAAAA,EAAH,MAAGA,EAAH,CAAOC,YAAP,MAAOA,YAAP,CAAqBC,IAArB,MAAqBA,IAArB,CAA2BC,SAA3B,MAA2BA,SAA3B,oBACT,0BAAI,GAAG,CAAEH,EAAT,eACE,2BACE,GAAG,CACDC,YAAY,0CAC0BA,YAD1B,EAERd,KAJR,CAME,SAAS,CAAED,MAAM,CAACkB,MANpB,CAOE,GAAG,CAAEF,IAPP,EADF,cAUE,yBAAG,SAAS,CAAEhB,MAAM,CAACmB,KAArB,WAAmCH,IAAnC,CAVF,cAWE,yBAAG,SAAS,CAAEhB,MAAM,CAACmB,KAArB,gBAAwCF,SAAxC,CAXF,CADS,EAAX,CAFJ,CADF,CADF,CAsBD,C,kBAnC+BnB,S,SAAbI,I","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport styles from \"../cast/Cast.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class Cast extends Component {\n  state = {\n    actors: \"\",\n  };\n\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieCredits(this.props.match.params.movieId)\n      .then((actors) => this.setState({ actors }));\n  }\n\n  render() {\n    const { actors } = this.state;\n    return (\n      <>\n        <ul className={styles.list}>\n          {actors &&\n            actors.map(({ id, profile_path, name, character }) => (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : photo\n                  }\n                  className={styles.poster}\n                  alt={name}\n                />\n                <p className={styles.title}>Name: {name}</p>\n                <p className={styles.title}>Character: {character}</p>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nCast.propTypes = {\n  id: PropTypes.number,\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}