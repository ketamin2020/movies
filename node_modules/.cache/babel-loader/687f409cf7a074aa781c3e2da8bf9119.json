{"ast":null,"code":"var _jsxFileName = \"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js\";\nimport React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport PropTypes from \"prop-types\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n\n    this.heandleChangeQuery = query => {\n      if (query) {\n        this.props.history.push({\n          pathname: this.props.location.pathname,\n          search: `query=${query}`,\n          state: {\n            from: \"/\"\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.history.push({\n      state: {\n        from: \"/\"\n      }\n    });\n    const {\n      query\n    } = parsedQuery(this.props.location.search);\n    console.log(query);\n\n    if (query) {\n      fetchMoviesApi.fetchSearchMovies(query).then(movies => this.setState({\n        movies\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      query: prevQuery\n    } = parsedQuery(prevProps.location.search);\n    const {\n      query: nextQuery\n    } = parsedQuery(this.props.location.search);\n\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi.fetchSearchMovies(nextQuery).then(movies => this.setState({\n        movies\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    const {\n      url\n    } = this.props.match;\n    console.log(\"moviePage\", this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchForm, {\n      onSubmit: this.heandleChangeQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), movies.length > 0 && /*#__PURE__*/React.createElement(NavLink, {\n      to: this.props.location.state.from,\n      className: styles.linkBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \"Go back\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.posterList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, movies.length > 0 && movies.map(({\n      id,\n      original_title,\n      poster_path,\n      title\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: styles.posterItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${url}/${id}`,\n      className: styles.itemLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, original_title), /*#__PURE__*/React.createElement(NavLink, {\n      to: `${url}/${id}`,\n      className: styles.imageLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : photo,\n      className: styles.poster,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\nMoviesPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.string\n};","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js"],"names":["React","Component","SearchForm","PropTypes","parsedQuery","fetchMoviesApi","NavLink","styles","photo","MoviesPage","state","movies","heandleChangeQuery","query","props","history","push","pathname","location","search","from","componentDidMount","console","log","fetchSearchMovies","then","setState","componentDidUpdate","prevProps","prevState","prevQuery","nextQuery","render","url","match","length","linkBack","posterList","map","id","original_title","poster_path","title","posterItem","itemLink","imageLink","poster","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport PropTypes from \"prop-types\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class MoviesPage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    this.props.history.push({\n      state: { from: \"/\" },\n    });\n    const { query } = parsedQuery(this.props.location.search);\n    console.log(query);\n    if (query) {\n      fetchMoviesApi\n        .fetchSearchMovies(query)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = parsedQuery(prevProps.location.search);\n    const { query: nextQuery } = parsedQuery(this.props.location.search);\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi\n        .fetchSearchMovies(nextQuery)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  heandleChangeQuery = (query) => {\n    if (query) {\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${query}`,\n        state: { from: \"/\" },\n      });\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { url } = this.props.match;\n    console.log(\"moviePage\", this.props);\n\n    return (\n      <>\n        <SearchForm onSubmit={this.heandleChangeQuery} />\n        {movies.length > 0 && (\n          <NavLink\n            to={this.props.location.state.from}\n            className={styles.linkBack}\n          >\n            Go back\n          </NavLink>\n        )}\n        <ul className={styles.posterList}>\n          {movies.length > 0 &&\n            movies.map(({ id, original_title, poster_path, title }) => (\n              <li key={id} className={styles.posterItem}>\n                <NavLink to={`${url}/${id}`} className={styles.itemLink}>\n                  {original_title}\n                </NavLink>\n                <NavLink to={`${url}/${id}`} className={styles.imageLink}>\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : photo\n                    }\n                    className={styles.poster}\n                    alt={title}\n                  />\n                </NavLink>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nMoviesPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}