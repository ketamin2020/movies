{"ast":null,"code":"import _objectSpread from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import SearchForm from\"../searchForm/SearchForm\";import parsedQuery from\"../../utils/queryStringParser\";import fetchMoviesApi from\"../../services/fetchMoviesApi\";import{NavLink}from\"react-router-dom\";import styles from\"../movies/MoviesPage.module.css\";import photo from\"../not-found.png\";var MoviesPage=/*#__PURE__*/function(_Component){_inherits(MoviesPage,_Component);var _super=_createSuper(MoviesPage);function MoviesPage(){var _this;_classCallCheck(this,MoviesPage);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={movies:[]};_this.heandleChangeQuery=function(query){if(query){_this.props.history.push(_objectSpread(_objectSpread({},_this.props.location),{},{search:\"query=\".concat(query)}));}};return _this;}_createClass(MoviesPage,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var _parsedQuery=parsedQuery(this.props.location.search),query=_parsedQuery.query;if(query){fetchMoviesApi.fetchSearchMovies(query).then(function(movies){return _this2.setState({movies:movies});});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var _this3=this;var _parsedQuery2=parsedQuery(prevProps.location.search),prevQuery=_parsedQuery2.query;var _parsedQuery3=parsedQuery(this.props.location.search),nextQuery=_parsedQuery3.query;if(prevQuery!==nextQuery){fetchMoviesApi.fetchSearchMovies(nextQuery).then(function(movies){return _this3.setState({movies:movies});});}}},{key:\"render\",value:function render(){var _this4=this;var movies=this.state.movies;var url=this.props.match.url;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(SearchForm,{onSubmit:this.heandleChangeQuery}),/*#__PURE__*/React.createElement(\"ul\",{className:styles.posterList},movies.length>0&&movies.map(function(_ref){var id=_ref.id,original_title=_ref.original_title,poster_path=_ref.poster_path,title=_ref.title;return/*#__PURE__*/React.createElement(\"li\",{key:id,className:styles.posterItem},/*#__PURE__*/React.createElement(NavLink,{to:{pathname:\"\".concat(url,\"/\").concat(id),state:{from:_this4.props.location}},className:styles.itemLink},original_title),/*#__PURE__*/React.createElement(NavLink,{to:{pathname:\"\".concat(url,\"/\").concat(id),state:{from:_this4.props.location}},className:styles.imageLink},/*#__PURE__*/React.createElement(\"img\",{src:poster_path?\"https://image.tmdb.org/t/p/w500\".concat(poster_path):photo,className:styles.poster,alt:title})));})));}}]);return MoviesPage;}(Component);export{MoviesPage as default};","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js"],"names":["React","Component","SearchForm","parsedQuery","fetchMoviesApi","NavLink","styles","photo","MoviesPage","state","movies","heandleChangeQuery","query","props","history","push","location","search","fetchSearchMovies","then","setState","prevProps","prevState","prevQuery","nextQuery","url","match","posterList","length","map","id","original_title","poster_path","title","posterItem","pathname","from","itemLink","imageLink","poster"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport PropTypes from \"prop-types\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class MoviesPage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    const { query } = parsedQuery(this.props.location.search);\n    if (query) {\n      fetchMoviesApi\n        .fetchSearchMovies(query)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = parsedQuery(prevProps.location.search);\n    const { query: nextQuery } = parsedQuery(this.props.location.search);\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi\n        .fetchSearchMovies(nextQuery)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  heandleChangeQuery = (query) => {\n    if (query) {\n      this.props.history.push({\n        ...this.props.location,\n        search: `query=${query}`,\n      });\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { url } = this.props.match;\n    return (\n      <>\n        <SearchForm onSubmit={this.heandleChangeQuery} />\n\n        <ul className={styles.posterList}>\n          {movies.length > 0 &&\n            movies.map(({ id, original_title, poster_path, title }) => (\n              <li key={id} className={styles.posterItem}>\n                <NavLink\n                  to={{\n                    pathname: `${url}/${id}`,\n                    state: { from: this.props.location },\n                  }}\n                  className={styles.itemLink}\n                >\n                  {original_title}\n                </NavLink>\n                <NavLink\n                  to={{\n                    pathname: `${url}/${id}`,\n                    state: { from: this.props.location },\n                  }}\n                  className={styles.imageLink}\n                >\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : photo\n                    }\n                    className={styles.poster}\n                    alt={title}\n                  />\n                </NavLink>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nMoviesPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}