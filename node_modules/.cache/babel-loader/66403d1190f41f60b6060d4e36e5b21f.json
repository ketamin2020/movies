{"ast":null,"code":"var _jsxFileName = \"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movieDetailPage/MovieDetailPage.js\";\nimport React, { Component } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport Cast from \"../cast/Cast\";\nimport Reviews from \"../reviews/Reviews\";\nimport styles from \"../movieDetailPage/movieDetailPage.module.css\";\nexport default class MovieDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetchMoviesApi.fetchMovieDetalis(this.props.match.params.movieId).then(movies => this.setState({\n      movies\n    }));\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, movies && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      className: styles.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Go back\"), movies && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://image.tmdb.org/t/p/w500${movies.poster_path}`,\n      className: styles.poster,\n      alt: movies.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.film,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, movies.original_title, \" (\", movies.release_date.substr(0, 4), \")\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \" \", \"Vote average: \", movies.vote_average), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.overview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, movies.overview), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.genreTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, \"Genres:\"), movies.genres.map(genre => /*#__PURE__*/React.createElement(\"span\", {\n      key: genre.id,\n      className: styles.genre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, genre.name))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.linkNavigation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${this.props.match.url}/cast`,\n      className: styles.navLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Cast\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${this.props.match.url}/reviews`,\n      className: styles.navLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, \"Reviews\"))))), /*#__PURE__*/React.createElement(Route, {\n      path: `${this.props.match.path}/cast`,\n      component: Cast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${this.props.match.path}/reviews`,\n      component: Reviews,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movieDetailPage/MovieDetailPage.js"],"names":["React","Component","Route","NavLink","fetchMoviesApi","Cast","Reviews","styles","MovieDetailPage","state","movies","componentDidMount","fetchMovieDetalis","props","match","params","movieId","then","setState","render","link","container","poster_path","poster","title","info","film","original_title","release_date","substr","average","vote_average","overview","genreTitle","genres","map","genre","id","name","linkNavigation","url","navLink","path"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport Cast from \"../cast/Cast\";\nimport Reviews from \"../reviews/Reviews\";\nimport styles from \"../movieDetailPage/movieDetailPage.module.css\";\nexport default class MovieDetailPage extends Component {\n  state = {\n    movies: \"\",\n  };\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieDetalis(this.props.match.params.movieId)\n      .then((movies) => this.setState({ movies }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <>\n        {movies && (\n          <NavLink to=\"/\" className={styles.link}>\n            Go back\n          </NavLink>\n        )}\n        {movies && (\n          <>\n            <div className={styles.container}>\n              <div>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movies.poster_path}`}\n                  className={styles.poster}\n                  alt={movies.title}\n                />\n              </div>\n              <div className={styles.info}>\n                <p className={styles.film}>\n                  {movies.original_title} ({movies.release_date.substr(0, 4)})\n                </p>\n                <span className={styles.average}>\n                  {\" \"}\n                  Vote average: {movies.vote_average}\n                </span>\n                <p className={styles.overview}>{movies.overview}</p>\n                <p>\n                  <span className={styles.genreTitle}>Genres:</span>\n                  {movies.genres.map((genre) => (\n                    <span key={genre.id} className={styles.genre}>\n                      {genre.name}\n                    </span>\n                  ))}\n                </p>\n                <ul className={styles.linkNavigation}>\n                  <li>\n                    <NavLink\n                      to={`${this.props.match.url}/cast`}\n                      className={styles.navLink}\n                    >\n                      Cast\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink\n                      to={`${this.props.match.url}/reviews`}\n                      className={styles.navLink}\n                    >\n                      Reviews\n                    </NavLink>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <Route path={`${this.props.match.path}/cast`} component={Cast} />\n            <Route\n              path={`${this.props.match.path}/reviews`}\n              component={Reviews}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}