{"ast":null,"code":"var _jsxFileName = \"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movieDetailPage/MovieDetailPage.js\";\nimport React, { Component } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport Cast from \"../cast/Cast\";\nimport Reviews from \"../reviews/Reviews\";\nimport styles from \"../movieDetailPage/movieDetailPage.module.css\";\nimport photo from \"../not-found.png\";\nexport default class MovieDetailPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: \"\"\n    };\n\n    this.handleGoBack = () => {\n      const {\n        state\n      } = this.props.location;\n\n      if (state) {\n        this.props.history.push(state.from);\n        return;\n      }\n\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: this.props.location.search\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetchMoviesApi.fetchMovieDetalis(this.props.match.params.movieId).then(movies => this.setState({\n      movies\n    }));\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    const {\n      path,\n      url\n    } = this.props.match;\n    const {\n      poster_path,\n      title,\n      original_title,\n      release_date,\n      vote_average,\n      overview,\n      genres\n    } = movies;\n    console.log(\"moviDetailPage\", this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, movies && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/movies\",\n      className: styles.link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, \"Go back\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : photo,\n      className: styles.poster,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.info,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.film,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, original_title, \" (\", release_date.substr(0, 4), \")\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.average,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \" \", \"Vote average: \", vote_average), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.overview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, overview), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.genreTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, \"Genres:\"), genres.map(({\n      id,\n      name\n    }) => /*#__PURE__*/React.createElement(\"span\", {\n      key: id,\n      className: styles.genre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, name))), /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.linkNavigation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${url}/cast`,\n      className: styles.navLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Cast\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: `${url}/reviews`,\n      className: styles.navLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, \"Reviews\"))))), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/cast`,\n      component: Cast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${path}/reviews`,\n      component: Reviews,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\nMovieDetailPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  release_date: PropTypes.number,\n  vote_average: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string\n};","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movieDetailPage/MovieDetailPage.js"],"names":["React","Component","Route","NavLink","PropTypes","fetchMoviesApi","Cast","Reviews","styles","photo","MovieDetailPage","state","movies","handleGoBack","props","location","history","push","from","pathname","search","componentDidMount","fetchMovieDetalis","match","params","movieId","then","setState","render","path","url","poster_path","title","original_title","release_date","vote_average","overview","genres","console","log","link","container","poster","info","film","substr","average","genreTitle","map","id","name","genre","linkNavigation","navLink","propTypes","string","number","array"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport Cast from \"../cast/Cast\";\nimport Reviews from \"../reviews/Reviews\";\nimport styles from \"../movieDetailPage/movieDetailPage.module.css\";\nimport photo from \"../not-found.png\";\nexport default class MovieDetailPage extends Component {\n  state = {\n    movies: \"\",\n  };\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieDetalis(this.props.match.params.movieId)\n      .then((movies) => this.setState({ movies }));\n  }\n\n  handleGoBack = () => {\n    const { state } = this.props.location;\n\n    if (state) {\n      this.props.history.push(state.from);\n      return;\n    }\n\n    this.props.history.push({\n      pathname: this.props.location.pathname,\n      search: this.props.location.search,\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { path, url } = this.props.match;\n\n    const {\n      poster_path,\n      title,\n      original_title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = movies;\n    console.log(\"moviDetailPage\", this.props);\n\n    return (\n      <>\n        {movies && (\n          <>\n            <NavLink to={\"/movies\"} className={styles.link}>\n              Go back\n            </NavLink>\n            <div className={styles.container}>\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : photo\n                  }\n                  className={styles.poster}\n                  alt={title}\n                />\n              </div>\n              <div className={styles.info}>\n                <p className={styles.film}>\n                  {original_title} ({release_date.substr(0, 4)})\n                </p>\n                <span className={styles.average}>\n                  {\" \"}\n                  Vote average: {vote_average}\n                </span>\n                <p className={styles.overview}>{overview}</p>\n                <p>\n                  <span className={styles.genreTitle}>Genres:</span>\n                  {genres.map(({ id, name }) => (\n                    <span key={id} className={styles.genre}>\n                      {name}\n                    </span>\n                  ))}\n                </p>\n                <ul className={styles.linkNavigation}>\n                  <li>\n                    <NavLink to={`${url}/cast`} className={styles.navLink}>\n                      Cast\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink to={`${url}/reviews`} className={styles.navLink}>\n                      Reviews\n                    </NavLink>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <Route path={`${path}/cast`} component={Cast} />\n            <Route path={`${path}/reviews`} component={Reviews} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nMovieDetailPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  release_date: PropTypes.number,\n  vote_average: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}