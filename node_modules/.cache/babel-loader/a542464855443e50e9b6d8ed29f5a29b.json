{"ast":null,"code":"var _jsxFileName = \"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/cast/Cast.js\";\nimport React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport styles from \"../cast/Cast.module.css\";\nimport photo from \"../not-found.png\";\nexport default class Cast extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      actors: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetchMoviesApi.fetchMovieCredits(this.props.match.params.movieId).then(actors => this.setState({\n      actors\n    }));\n  }\n\n  render() {\n    const {\n      actors\n    } = this.state;\n    console.log(actors);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, actors && actors.map(({\n      id,\n      profile_path,\n      name,\n      character\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : photo,\n      className: styles.poster,\n      alt: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Name: \", name), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"Character: \", character)))));\n  }\n\n}\nCast.propTypes = {\n  id: PropTypes.number,\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string\n};","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/cast/Cast.js"],"names":["React","Component","propTypes","fetchMoviesApi","styles","photo","Cast","state","actors","componentDidMount","fetchMovieCredits","props","match","params","movieId","then","setState","render","console","log","list","map","id","profile_path","name","character","poster","title","PropTypes","number","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,eAAe,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC1CM,KAD0C,GAClC;AACNC,MAAAA,MAAM,EAAE;AADF,KADkC;AAAA;;AAK1CC,EAAAA,iBAAiB,GAAG;AAClBN,IAAAA,cAAc,CACXO,iBADH,CACqB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAD7C,EAEGC,IAFH,CAESP,MAAD,IAAY,KAAKQ,QAAL,CAAc;AAAER,MAAAA;AAAF,KAAd,CAFpB;AAGD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AACA,wBACE,uDACE;AAAI,MAAA,SAAS,EAAEJ,MAAM,CAACgB,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,MAAM,IACLA,MAAM,CAACa,GAAP,CAAW,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,YAAN;AAAoBC,MAAAA,IAApB;AAA0BC,MAAAA;AAA1B,KAAD,kBACT;AAAI,MAAA,GAAG,EAAEH,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,GAAG,EACDC,YAAY,GACP,kCAAiCA,YAAa,EADvC,GAERlB,KAJR;AAME,MAAA,SAAS,EAAED,MAAM,CAACsB,MANpB;AAOE,MAAA,GAAG,EAAEF,IAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE;AAAG,MAAA,SAAS,EAAEpB,MAAM,CAACuB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmCH,IAAnC,CAVF,eAWE;AAAG,MAAA,SAAS,EAAEpB,MAAM,CAACuB,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAwCF,SAAxC,CAXF,CADF,CAFJ,CADF,CADF;AAsBD;;AApCyC;AAuC5CnB,IAAI,CAACJ,SAAL,GAAiB;AACfoB,EAAAA,EAAE,EAAEM,SAAS,CAACC,MADC;AAEfN,EAAAA,YAAY,EAAEK,SAAS,CAACE,MAFT;AAGfN,EAAAA,IAAI,EAAEI,SAAS,CAACE,MAHD;AAIfL,EAAAA,SAAS,EAAEG,SAAS,CAACE;AAJN,CAAjB","sourcesContent":["import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport styles from \"../cast/Cast.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class Cast extends Component {\n  state = {\n    actors: \"\",\n  };\n\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieCredits(this.props.match.params.movieId)\n      .then((actors) => this.setState({ actors }));\n  }\n\n  render() {\n    const { actors } = this.state;\n    console.log(actors);\n    return (\n      <>\n        <ul className={styles.list}>\n          {actors &&\n            actors.map(({ id, profile_path, name, character }) => (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : photo\n                  }\n                  className={styles.poster}\n                  alt={name}\n                />\n                <p className={styles.title}>Name: {name}</p>\n                <p className={styles.title}>Character: {character}</p>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nCast.propTypes = {\n  id: PropTypes.number,\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}