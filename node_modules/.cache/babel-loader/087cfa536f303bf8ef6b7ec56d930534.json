{"ast":null,"code":"var _jsxFileName = \"/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js\";\nimport React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport PropTypes from \"prop-types\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\nexport default class MoviesPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: []\n    };\n\n    this.handleGoBack = () => {\n      const {\n        state\n      } = this.props.location;\n\n      if (state) {\n        this.props.history.push(state.from);\n        return;\n      }\n\n      this.props.history.push({\n        pathname: \"movies\",\n        search: this.props.location.search\n      });\n    };\n\n    this.heandleChangeQuery = query => {\n      if (query) {\n        this.props.history.push({\n          pathname: this.props.location.pathname,\n          search: `query=${query}`\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      query\n    } = parsedQuery(this.props.location.search);\n\n    if (query) {\n      fetchMoviesApi.fetchSearchMovies(query).then(movies => this.setState({\n        movies\n      }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      query: prevQuery\n    } = parsedQuery(prevProps.location.search);\n    const {\n      query: nextQuery\n    } = parsedQuery(this.props.location.search);\n\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi.fetchSearchMovies(nextQuery).then(movies => this.setState({\n        movies\n      }));\n    }\n  }\n\n  render() {\n    const {\n      movies\n    } = this.state;\n    const {\n      url\n    } = this.props.match;\n    console.log(\"moviePage\", this.props);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchForm, {\n      onSubmit: this.heandleChangeQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), movies.length > 0 && /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/\",\n      className: styles.linkBack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Go back\"), /*#__PURE__*/React.createElement(\"ul\", {\n      className: styles.posterList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, movies.length > 0 && movies.map(({\n      id,\n      original_title,\n      poster_path,\n      title\n    }) => /*#__PURE__*/React.createElement(\"li\", {\n      key: id,\n      className: styles.posterItem,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: {\n        pathname: `${url}/${id}`,\n        state: {\n          from: this.props.location\n        }\n      },\n      className: styles.itemLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, original_title), /*#__PURE__*/React.createElement(NavLink, {\n      to: {\n        pathname: `${url}/${id}`,\n        state: {\n          from: this.props.location\n        }\n      },\n      className: styles.imageLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : photo,\n      className: styles.poster,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }))))));\n  }\n\n}\nMoviesPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.string\n};","map":{"version":3,"sources":["/Users/maksymkovalenko/GOIT-FE-COURSE/React/react-movies/src/components/movies/MoviesPage.js"],"names":["React","Component","SearchForm","PropTypes","parsedQuery","fetchMoviesApi","NavLink","styles","photo","MoviesPage","state","movies","handleGoBack","props","location","history","push","from","pathname","search","heandleChangeQuery","query","componentDidMount","fetchSearchMovies","then","setState","componentDidUpdate","prevProps","prevState","prevQuery","nextQuery","render","url","match","console","log","length","linkBack","posterList","map","id","original_title","poster_path","title","posterItem","itemLink","imageLink","poster","propTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SearchForm from \"../searchForm/SearchForm\";\nimport PropTypes from \"prop-types\";\nimport parsedQuery from \"../../utils/queryStringParser\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../movies/MoviesPage.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class MoviesPage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    const { query } = parsedQuery(this.props.location.search);\n    if (query) {\n      fetchMoviesApi\n        .fetchSearchMovies(query)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query: prevQuery } = parsedQuery(prevProps.location.search);\n    const { query: nextQuery } = parsedQuery(this.props.location.search);\n    if (prevQuery !== nextQuery) {\n      fetchMoviesApi\n        .fetchSearchMovies(nextQuery)\n        .then((movies) => this.setState({ movies }));\n    }\n  }\n\n  handleGoBack = () => {\n    const { state } = this.props.location;\n\n    if (state) {\n      this.props.history.push(state.from);\n      return;\n    }\n\n    this.props.history.push({\n      pathname: \"movies\",\n      search: this.props.location.search,\n    });\n  };\n\n  heandleChangeQuery = (query) => {\n    if (query) {\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${query}`,\n      });\n    }\n  };\n\n  render() {\n    const { movies } = this.state;\n    const { url } = this.props.match;\n    console.log(\"moviePage\", this.props);\n\n    return (\n      <>\n        <SearchForm onSubmit={this.heandleChangeQuery} />\n        {movies.length > 0 && (\n          <NavLink to=\"/\" className={styles.linkBack}>\n            Go back\n          </NavLink>\n        )}\n        <ul className={styles.posterList}>\n          {movies.length > 0 &&\n            movies.map(({ id, original_title, poster_path, title }) => (\n              <li key={id} className={styles.posterItem}>\n                <NavLink\n                  to={{\n                    pathname: `${url}/${id}`,\n                    state: { from: this.props.location },\n                  }}\n                  className={styles.itemLink}\n                >\n                  {original_title}\n                </NavLink>\n                <NavLink\n                  to={{\n                    pathname: `${url}/${id}`,\n                    state: { from: this.props.location },\n                  }}\n                  className={styles.imageLink}\n                >\n                  <img\n                    src={\n                      poster_path\n                        ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                        : photo\n                    }\n                    className={styles.poster}\n                    alt={title}\n                  />\n                </NavLink>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nMoviesPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  id: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}