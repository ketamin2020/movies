{"version":3,"sources":["services/fetchMoviesApi.js","components/not-found.png","components/cast/Cast.module.css","components/movieDetailPage/movieDetailPage.module.css","components/cast/Cast.js","components/reviews/Reviews.js","components/movieDetailPage/MovieDetailPage.js"],"names":["API_KEY","fetchTrendingMovies","qweryString","fetch","then","respons","json","data","results","fetchSearchMovies","qwery","searchString","fetchMovieDetalis","id","detalisQwery","fetchMovieCredits","cast","fetchMovieReviews","reviewsQwery","module","exports","Cast","state","actors","fetchMoviesApi","this","props","match","params","movieId","setState","className","styles","list","map","profile_path","name","character","key","src","photo","poster","alt","title","Component","Reviews","reviews","length","author","content","MovieDetailPage","movies","path","url","poster_path","original_title","release_date","vote_average","overview","genres","to","link","container","info","film","substr","average","genreTitle","genre","linkNavigation","navLink","component"],"mappings":"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","file":"static/js/4.b0cbbf04.chunk.js","sourcesContent":["const API_KEY = \"f143197e3704508a07cd80f040af7920\";\n\nconst fetchTrendingMovies = () => {\n  const qweryString = `//api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n  return fetch(qweryString).then((respons) =>\n    respons.json().then((data) => data.results)\n  );\n};\n\nconst fetchSearchMovies = (qwery) => {\n  const searchString = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${qwery}&page=1`;\n  return fetch(searchString).then((respons) =>\n    respons.json().then((data) => data.results)\n  );\n};\nconst fetchMovieDetalis = (id) => {\n  const detalisQwery = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n  return fetch(detalisQwery).then((respons) =>\n    respons.json().then((data) => data)\n  );\n};\n\nconst fetchMovieCredits = (id) => {\n  const detalisQwery = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n  return fetch(detalisQwery).then((respons) =>\n    respons.json().then((data) => data.cast)\n  );\n};\n\nconst fetchMovieReviews = (id) => {\n  const reviewsQwery = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return fetch(reviewsQwery).then((respons) =>\n    respons.json().then((data) => data.results)\n  );\n};\n\nexport default {\n  fetchTrendingMovies,\n  fetchSearchMovies,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n","module.exports = __webpack_public_path__ + \"static/media/not-found.15ffdca4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posterList\":\"Cast_posterList__1A_4w\",\"poster\":\"Cast_poster__3Ye5B\",\"list\":\"Cast_list__1AQIb\",\"title\":\"Cast_title__82waP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster\":\"movieDetailPage_poster__1-gwa\",\"link\":\"movieDetailPage_link__Smbfs\",\"navLink\":\"movieDetailPage_navLink__4YGeM\",\"container\":\"movieDetailPage_container__2Eb6f\",\"linkNavigation\":\"movieDetailPage_linkNavigation__yaVxr\",\"info\":\"movieDetailPage_info__1z4aX\",\"film\":\"movieDetailPage_film__lmaux\",\"average\":\"movieDetailPage_average__95IKy\",\"overview\":\"movieDetailPage_overview__6ycOF\",\"genre\":\"movieDetailPage_genre__140iU\",\"genreTitle\":\"movieDetailPage_genreTitle__3TFP4\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport styles from \"../cast/Cast.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class Cast extends Component {\n  state = {\n    actors: \"\",\n  };\n\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieCredits(this.props.match.params.movieId)\n      .then((actors) => this.setState({ actors }));\n  }\n\n  render() {\n    const { actors } = this.state;\n    return (\n      <>\n        <ul className={styles.list}>\n          {actors &&\n            actors.map(({ id, profile_path, name, character }) => (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : photo\n                  }\n                  className={styles.poster}\n                  alt={name}\n                />\n                <p className={styles.title}>Name: {name}</p>\n                <p className={styles.title}>Character: {character}</p>\n              </li>\n            ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nCast.propTypes = {\n  id: PropTypes.number,\n  profile_path: PropTypes.string,\n  name: PropTypes.string,\n  character: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\n\nexport default class Reviews extends Component {\n  state = {\n    reviews: \"\",\n  };\n\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieReviews(this.props.match.params.movieId)\n      .then((reviews) => this.setState({ reviews }));\n  }\n\n  render() {\n    const { reviews } = this.state;\n\n    return (\n      <>\n        {reviews.length > 0 ? (\n          <div>\n            {reviews.length > 0 && (\n              <ul>\n                {reviews.map(({ id, author, content }) => (\n                  <li key={id}>\n                    <p> Uuthor: {author}</p>\n                    <p>{content}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        ) : (\n          <h2>We do not have any reviews</h2>\n        )}\n      </>\n    );\n  }\n}\n\nReviews.propTypes = {\n  id: PropTypes.number,\n  author: PropTypes.string,\n  content: PropTypes.string,\n};\n","import React, { Component } from \"react\";\nimport { Route, NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport Cast from \"../cast/Cast\";\nimport Reviews from \"../reviews/Reviews\";\nimport styles from \"../movieDetailPage/movieDetailPage.module.css\";\nimport photo from \"../not-found.png\";\nexport default class MovieDetailPage extends Component {\n  state = {\n    movies: \"\",\n  };\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchMovieDetalis(this.props.match.params.movieId)\n      .then((movies) => this.setState({ movies }));\n  }\n\n  render() {\n    const { movies } = this.state;\n    const { path, url } = this.props.match;\n\n    const {\n      poster_path,\n      title,\n      original_title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = movies;\n    return (\n      <>\n        {movies && (\n          <>\n            <NavLink to=\"/\" className={styles.link}>\n              Go back\n            </NavLink>\n            <div className={styles.container}>\n              <div>\n                <img\n                  src={\n                    poster_path\n                      ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                      : photo\n                  }\n                  className={styles.poster}\n                  alt={title}\n                />\n              </div>\n              <div className={styles.info}>\n                <p className={styles.film}>\n                  {original_title} ({release_date.substr(0, 4)})\n                </p>\n                <span className={styles.average}>\n                  {\" \"}\n                  Vote average: {vote_average}\n                </span>\n                <p className={styles.overview}>{overview}</p>\n                <p>\n                  <span className={styles.genreTitle}>Genres:</span>\n                  {genres.map(({ id, name }) => (\n                    <span key={id} className={styles.genre}>\n                      {name}\n                    </span>\n                  ))}\n                </p>\n                <ul className={styles.linkNavigation}>\n                  <li>\n                    <NavLink to={`${url}/cast`} className={styles.navLink}>\n                      Cast\n                    </NavLink>\n                  </li>\n                  <li>\n                    <NavLink to={`${url}/reviews`} className={styles.navLink}>\n                      Reviews\n                    </NavLink>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            <Route path={`${path}/cast`} component={Cast} />\n            <Route path={`${path}/reviews`} component={Reviews} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nMovieDetailPage.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  original_title: PropTypes.string,\n  release_date: PropTypes.number,\n  vote_average: PropTypes.string,\n  overview: PropTypes.string,\n  genres: PropTypes.array,\n  id: PropTypes.string,\n  name: PropTypes.string,\n};\n"],"sourceRoot":""}