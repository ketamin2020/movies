{"version":3,"sources":["services/fetchMoviesApi.js","components/not-found.png","components/homepage/HomePage.module.css","components/homepage/HomePage.js"],"names":["API_KEY","fetchTrendingMovies","qweryString","fetch","then","respons","json","data","results","fetchSearchMovies","qwery","searchString","fetchMovieDetalis","id","detalisQwery","fetchMovieCredits","cast","fetchMovieReviews","reviewsQwery","module","exports","HomePage","state","movies","fetchMoviesApi","setState","this","className","styles","posterList","map","poster_path","title","key","posterItem","to","pathname","from","props","location","itemLink","imageLink","src","photo","poster","alt","Component"],"mappings":"mHAAA,IAAMA,EAAU,mCAoCD,KACbC,oBAnC0B,WAC1B,IAAMC,EAAW,4DAAwDF,GACzE,OAAOG,MAAMD,GAAaE,MAAK,SAACC,GAAD,OAC7BA,EAAQC,OAAOF,MAAK,SAACG,GAAD,OAAUA,EAAKC,eAiCrCC,kBA7BwB,SAACC,GACzB,IAAMC,EAAY,4DAAwDX,EAAxD,iCAAwFU,EAAxF,WAClB,OAAOP,MAAMQ,GAAcP,MAAK,SAACC,GAAD,OAC9BA,EAAQC,OAAOF,MAAK,SAACG,GAAD,OAAUA,EAAKC,eA2BrCI,kBAxBwB,SAACC,GACzB,IAAMC,EAAY,6CAAyCD,EAAzC,oBAAuDb,EAAvD,mBAClB,OAAOG,MAAMW,GAAcV,MAAK,SAACC,GAAD,OAC9BA,EAAQC,OAAOF,MAAK,SAACG,GAAD,OAAUA,SAsBhCQ,kBAlBwB,SAACF,GACzB,IAAMC,EAAY,6CAAyCD,EAAzC,4BAA+Db,GACjF,OAAOG,MAAMW,GAAcV,MAAK,SAACC,GAAD,OAC9BA,EAAQC,OAAOF,MAAK,SAACG,GAAD,OAAUA,EAAKS,YAgBrCC,kBAZwB,SAACJ,GACzB,IAAMK,EAAY,6CAAyCL,EAAzC,4BAA+Db,EAA/D,0BAClB,OAAOG,MAAMe,GAAcd,MAAK,SAACC,GAAD,OAC9BA,EAAQC,OAAOF,MAAK,SAACG,GAAD,OAAUA,EAAKC,iB,mBChCvCW,EAAOC,QAAU,IAA0B,uC,mBCC3CD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,OAAS,yBAAyB,WAAa,6BAA6B,SAAW,6B,oLCM9HC,E,4MACnBC,MAAQ,CACNC,OAAQ,I,kEAGW,IAAD,OAClBC,IACGvB,sBACAG,MAAK,SAACmB,GAAD,OAAY,EAAKE,SAAS,CAAEF,gB,+BAG5B,IAAD,OACCA,EAAWG,KAAKJ,MAAhBC,OACR,OACE,wBAAII,UAAWC,IAAOC,YACnBN,EAAOO,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,wBAAIC,IAAKpB,EAAIc,UAAWC,IAAOM,YAC7B,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,OAAavB,GACrBS,MAAO,CAAEe,KAAM,EAAKC,MAAMC,SAASH,WAErCT,UAAWC,IAAOY,UAEjBR,EAAO,KAEV,kBAAC,IAAD,CACEG,GAAI,CACFC,SAAS,WAAD,OAAavB,GACrBS,MAAO,CAAEe,KAAM,EAAKC,MAAMC,SAASH,WAErCT,UAAWC,IAAOa,WAElB,yBACEC,IAAG,yCAAoCX,GAAeY,KACtDhB,UAAWC,IAAOgB,OAClBC,IAAKb,c,GApCiBc","file":"static/js/5.907086e8.chunk.js","sourcesContent":["const API_KEY = \"f143197e3704508a07cd80f040af7920\";\n\nconst fetchTrendingMovies = () => {\n  const qweryString = `//api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n  return fetch(qweryString).then((respons) =>\n    respons.json().then((data) => data.results)\n  );\n};\n\nconst fetchSearchMovies = (qwery) => {\n  const searchString = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${qwery}&page=1`;\n  return fetch(searchString).then((respons) =>\n    respons.json().then((data) => data.results)\n  );\n};\nconst fetchMovieDetalis = (id) => {\n  const detalisQwery = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`;\n  return fetch(detalisQwery).then((respons) =>\n    respons.json().then((data) => data)\n  );\n};\n\nconst fetchMovieCredits = (id) => {\n  const detalisQwery = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`;\n  return fetch(detalisQwery).then((respons) =>\n    respons.json().then((data) => data.cast)\n  );\n};\n\nconst fetchMovieReviews = (id) => {\n  const reviewsQwery = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return fetch(reviewsQwery).then((respons) =>\n    respons.json().then((data) => data.results)\n  );\n};\n\nexport default {\n  fetchTrendingMovies,\n  fetchSearchMovies,\n  fetchMovieDetalis,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n","module.exports = __webpack_public_path__ + \"static/media/not-found.15ffdca4.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posterList\":\"HomePage_posterList__fFcY9\",\"poster\":\"HomePage_poster__1QPQ1\",\"posterItem\":\"HomePage_posterItem__1Wmk-\",\"itemLink\":\"HomePage_itemLink__3cm7s\"};","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport fetchMoviesApi from \"../../services/fetchMoviesApi\";\nimport styles from \"../homepage/HomePage.module.css\";\nimport photo from \"../not-found.png\";\n\nexport default class HomePage extends Component {\n  state = {\n    movies: [],\n  };\n\n  componentDidMount() {\n    fetchMoviesApi\n      .fetchTrendingMovies()\n      .then((movies) => this.setState({ movies }));\n  }\n\n  render() {\n    const { movies } = this.state;\n    return (\n      <ul className={styles.posterList}>\n        {movies.map(({ id, poster_path, title }) => (\n          <li key={id} className={styles.posterItem}>\n            <NavLink\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: this.props.location.pathname },\n              }}\n              className={styles.itemLink}\n            >\n              {title}{\" \"}\n            </NavLink>\n            <NavLink\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: this.props.location.pathname },\n              }}\n              className={styles.imageLink}\n            >\n              <img\n                src={`https://image.tmdb.org/t/p/w500${poster_path || photo}`}\n                className={styles.poster}\n                alt={title}\n              />\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nHomePage.propTypes = {\n  id: PropTypes.number,\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n};\n"],"sourceRoot":""}